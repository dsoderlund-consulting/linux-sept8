# Dependencies
load('ext://git_resource', 'git_checkout')
load('ext://deployment', 'deployment_create')
load('ext://configmap', 'configmap_create')
git_checkout('https://github.com/dsoderlund-consulting/demo-platform.git#main', './demo-platform')
# Get Platform

# Deploy CNPG
k8s_yaml('demo-platform/cnpg-install.yaml')


# Database
k8s_yaml('cnpg/postgres-cluster.yaml')
k8s_resource(
  resource_deps=['cnpg-controller-manager'], # created by ds-ref-platform
  new_name='database',
  objects=['linux-sept8-postgres-cluster'],
  extra_pod_selectors=[{'cnpg.io/cluster': 'linux-sept8-postgres-cluster'}],
  port_forwards=5432)

# Backend
docker_build("backend", "backend")
deployment_create(
  'backend',
  ports='8080',
  env=[{"name":"ASPNETCORE_ENVIRONMENT", "value": "Development"}],
  envFrom=[{
    "secretRef":{
      "name": "linux-sept8-postgres-cluster-app" # autogenerated when creating a postgres cluster without any initdb arguments
    }
  }]
  )
k8s_resource(
  workload='backend',
  port_forwards=8080,
  resource_deps=['database']
)

# Frontend
docker_build(
  "frontend",
  "frontend",
  dockerfile="frontend/tilt.dockerfile" # we want another docker file when running in dev in kubernetes, since the default one is just compiling for nginx.
)
deployment_create(
  'frontend',
  ports='8081',
  env=[{"name": "VITE_API_BASE_URL", "value": "http://localhost:8080"}],
  resource_deps=['backend']
  )
k8s_resource(
  workload='frontend',
  port_forwards=8081
)